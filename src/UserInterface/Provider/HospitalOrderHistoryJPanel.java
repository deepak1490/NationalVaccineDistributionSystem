/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Provider;

import Business.Employee.Employee;
import Business.Order.Order;
import Business.Order.OrderItem;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepak
 */
public class HospitalOrderHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewCustomer
     */
    private JPanel userProcessContainer;
    private Employee employee;

    public HospitalOrderHistoryJPanel(JPanel userProcessContainer, Employee employee) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.employee = employee;
        customerName.setText(employee.getFname() + " " + employee.getLname());
        populateTable();
//        if (orderTable.getRowCount() == 0) {
//            JOptionPane.showMessageDialog(null, "Currently there are no orders placed");
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        customerName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productCatalog = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        orderDetailsJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        customerName.setText("jLabel1");
        add(customerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, -1, -1));

        productCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productCatalog);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 375, 92));

        backButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 510, -1, -1));

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Order ID", "Order Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderJTable);
        if (orderJTable.getColumnModel().getColumnCount() > 0) {
            orderJTable.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 375, 92));

        orderDetailsJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orderDetailsJButton.setText("View Order Details");
        orderDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderDetailsJButtonActionPerformed(evt);
            }
        });
        add(orderDetailsJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 330, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Hospital Order History Page");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) orderJTable.getModel();
        dtm.setRowCount(0);

        for (Order order : employee.getMasterOrderCatalog().getOrderCatalog()) {

            Object row[] = new Object[2];
            row[0] = order.getOrderNumber();
            row[1] = order.getOrderStatus();
            dtm.addRow(row);
        }
    }
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void orderDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an order to view");
            return;
        }
        DefaultTableModel dtm = (DefaultTableModel) productCatalog.getModel();
        dtm.setRowCount(0);
        int orderid = (Integer) orderJTable.getValueAt(selectedRow, 0);
        Order ord = null;
        for (Order order : employee.getMasterOrderCatalog().getOrderCatalog()) {
            if (orderid == order.getOrderNumber()) {
                ord = order;
                JOptionPane.showMessageDialog(null, ord);
            }
        }
        for (OrderItem oi : ord.getOrderItemList()) {
            Object row[] = new Object[3];
            row[0] = oi;
            row[1] = oi.getQuantity();
            row[2] = oi.getSalesPrice();
            dtm.addRow(row);
        }
    }//GEN-LAST:event_orderDetailsJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel customerName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton orderDetailsJButton;
    private javax.swing.JTable orderJTable;
    private javax.swing.JTable productCatalog;
    // End of variables declaration//GEN-END:variables
}
