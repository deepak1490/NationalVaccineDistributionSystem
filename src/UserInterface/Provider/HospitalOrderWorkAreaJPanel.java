/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Provider;

import Business.Cdc;
import Business.DB4OUtil.DB4OUtil;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ProvidersEnterprise;
import Business.Hospital.Hospital;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Deepak
 */
public class HospitalOrderWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    private Cdc system;
    private DB4OUtil db4o;

    public HospitalOrderWorkAreaJPanel(JPanel upc, UserAccount user,
            Organization org, Enterprise enterprise, Cdc system, DB4OUtil db4o) {
        initComponents();
        userProcessContainer = upc;
        userAccount = user;
        organization = org;
        this.enterprise = enterprise;
        this.system = system;
        this.db4o = db4o;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orderButton = new javax.swing.JButton();
        logoutJButton = new javax.swing.JButton();
        orderHistory = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        approveClinicOrdersButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Hospital Order WorkArea");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, -1, -1));

        orderButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        orderButton.setText("Order Vaccine");
        orderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderButtonActionPerformed(evt);
            }
        });
        add(orderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 200, 147, -1));

        logoutJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        logoutJButton.setText("Logout");
        logoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJButtonActionPerformed(evt);
            }
        });
        add(logoutJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 113, -1));

        orderHistory.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        orderHistory.setText("Order History");
        orderHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderHistoryActionPerformed(evt);
            }
        });
        add(orderHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 280, 147, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Check Inventory");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 360, 150, -1));

        approveClinicOrdersButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        approveClinicOrdersButton.setText("Approve Clinic Orders");
        approveClinicOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveClinicOrdersButtonActionPerformed(evt);
            }
        });
        add(approveClinicOrdersButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 440, 180, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void orderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderButtonActionPerformed
        Network n = null;
        for (Network network : system.getNetworkDirectory().getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (e == enterprise) {
                    n = network;
                    break;
                }
            }
        }
        ProvidersEnterprise e1 = null;
        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof ProvidersEnterprise) {
                e1 = (ProvidersEnterprise) e;
            }
        }
        for (Hospital h : e1.getHospitalDirectory().getHospitalList()) {
            if (h.getHospitalName().equals(userAccount.getEmployee().getHospital().getHospitalName())) {
                if (!h.getRegistrationStatus().equals("Approved")) {
                    JOptionPane.showMessageDialog(null, "Hospital has not been registered!");
                    return;
                }
            }
        }
        BrowseVaccinesJPanel register = new BrowseVaccinesJPanel(userProcessContainer, userAccount, organization, e1, system);
        userProcessContainer.add("BrowseVaccinesJPanel", register);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_orderButtonActionPerformed

    private void logoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJButtonActionPerformed

        db4o.storeSystem(system);
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_logoutJButtonActionPerformed

    private void orderHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderHistoryActionPerformed
        // TODO add your handling code here:
        for (Organization org : enterprise.getOrganizationList().getOrganizationList()) {
            for (Employee employee : org.getEmployeeDirectory().getEmployeeList()) {
                if (userAccount.getEmployee().getId() == (employee.getId())) {
                    HospitalOrderHistoryJPanel order1 = new HospitalOrderHistoryJPanel(userProcessContainer, employee);
                    userProcessContainer.add("HospitalOrderHistoryJPanel", order1);
                }
            }
        }
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_orderHistoryActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        InventoryJPanel register = new InventoryJPanel(userProcessContainer, userAccount, organization, enterprise, system);
        userProcessContainer.add("InventoryJPanel", register);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void approveClinicOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveClinicOrdersButtonActionPerformed
        ApproveClinicOrdersJPanel approve = new ApproveClinicOrdersJPanel(userProcessContainer, userAccount, enterprise, system);
        userProcessContainer.add("ApproveClinicOrdersJPanel", approve);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_approveClinicOrdersButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveClinicOrdersButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton logoutJButton;
    private javax.swing.JButton orderButton;
    private javax.swing.JButton orderHistory;
    // End of variables declaration//GEN-END:variables
}
