/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PublicHealthDept;

import Business.Cdc;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PHDEnterprise;
import Business.Enterprise.ProvidersEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Pharmacy.Pharmacy;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RegistrationRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepak
 */
public class ApprovePharmacyJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    private Cdc system;

    /**
     * Creates new form ApprovePharmacyJPanel
     */
    public ApprovePharmacyJPanel(JPanel userProcessContainer,
            UserAccount userAccount, Organization organization,
            Enterprise enterprise, Cdc system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.userAccount = userAccount;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();

    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) pharmacyTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {

            if (request.getRequestType().equals("Pharmacy Registration Request")) {
                RegistrationRequest req = (RegistrationRequest) request;
                Object[] row = new Object[4];
                row[0] = req.getRegistrationProcessId();
                row[1] = request.getSender().getEmployee().getPharmacy().getPharmacyName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getFname();
                row[3] = request;
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pharmacyTable = new javax.swing.JTable();
        assignToMeButton = new javax.swing.JButton();
        approvePharmacy = new javax.swing.JButton();
        rejectPharmacy = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pharmacyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pharmacy ID", "Pharmacy Name", "Approver Name", "Registration Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pharmacyTable);
        if (pharmacyTable.getColumnModel().getColumnCount() > 0) {
            pharmacyTable.getColumnModel().getColumn(0).setResizable(false);
            pharmacyTable.getColumnModel().getColumn(1).setResizable(false);
            pharmacyTable.getColumnModel().getColumn(2).setResizable(false);
            pharmacyTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 505, 88));

        assignToMeButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        assignToMeButton.setText("Assign To Me");
        assignToMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeButtonActionPerformed(evt);
            }
        });
        add(assignToMeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, -1));

        approvePharmacy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        approvePharmacy.setText("Approve Pharmacy");
        approvePharmacy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvePharmacyActionPerformed(evt);
            }
        });
        add(approvePharmacy, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 340, -1, -1));

        rejectPharmacy.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rejectPharmacy.setText("Reject Pharmacy");
        rejectPharmacy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectPharmacyActionPerformed(evt);
            }
        });
        add(rejectPharmacy, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 340, -1, -1));

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Approve Pharmacy Page");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignToMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = pharmacyTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        PHDEnterprise phd = (PHDEnterprise) enterprise;
        for (Pharmacy pharmacy : phd.getProvidersEnterprise().getPharmacyDirectory().getPharmacyDirectory()) {
            JOptionPane.showMessageDialog(null, pharmacy.getPharmacyName());
        }
        RegistrationRequest request = (RegistrationRequest) pharmacyTable.getValueAt(selectedRow, 3);
        if (pharmacyTable.getValueAt(selectedRow, 2) == null) {
            request.setReceiver(userAccount);
            request.setStatus("Pending for approval");
            request.setRegistrationStatus("Pending for Approval");
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Request has been assigned already");
        }
    }//GEN-LAST:event_assignToMeButtonActionPerformed

    private void approvePharmacyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvePharmacyActionPerformed
        // TODO add your handling code here:
        int selectedRow = pharmacyTable.getSelectedRow();
        RegistrationRequest request = (RegistrationRequest) pharmacyTable.getValueAt(selectedRow, 3);
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a order to approve");
            return;
        }
        if (request.getStatus().equals("Approved") || request.getStatus().equals("Rejected")) {
            JOptionPane.showMessageDialog(null, "Registration Request already processed");
            return;
        }
        if (request.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "Request has to be assigned first");
            return;
        }
        if (!(request.getReceiver() == userAccount)) {
            JOptionPane.showMessageDialog(null, "Request has been assigned to another sales rep");
            return;
        }
        request.setStatus("Approved");
        request.setRegistrationStatus("Approved");
        ProvidersEnterprise p = null;
        Network n = null;
        for (Network network : system.getNetworkDirectory().getNetworkList()) {
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (e == enterprise) {
                    n = network;
                    break;
                }
            }
        }

        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            if (e instanceof ProvidersEnterprise) {
                p = (ProvidersEnterprise) e;
                break;
            }
        }

        if (p != null) {
            for (Pharmacy p1 : p.getPharmacyDirectory().getPharmacyDirectory()) {
                if (p1.getPharmacyName().equals(request.getSender().getEmployee().getPharmacy().getPharmacyName())) {
                    p1.setRegistrationStatus("Approved");
                }
            }
        }
        JOptionPane.showMessageDialog(null, "Request processed");
        populateTable();
    }//GEN-LAST:event_approvePharmacyActionPerformed

    private void rejectPharmacyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectPharmacyActionPerformed
        // TODO add your handling code here:
        int selectedRow = pharmacyTable.getSelectedRow();
        RegistrationRequest request = (RegistrationRequest) pharmacyTable.getValueAt(selectedRow, 3);
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a order to approve");
            return;
        }
        if (request.getStatus().equals("Approved") || request.getStatus().equals("Rejected")) {
            JOptionPane.showMessageDialog(null, "Enrollment Request already processed");
            return;
        }
        if (request.getReceiver() == null) {
            JOptionPane.showMessageDialog(null, "Request has to be assigned first");
            return;
        }
        if (!(request.getReceiver() == userAccount)) {
            JOptionPane.showMessageDialog(null, "Request has been assigned to another sales rep");
            return;
        }
        request.setRegistrationStatus("Rejected");
        request.setStatus("Rejected");
        JOptionPane.showMessageDialog(null, "Request processed");
        populateTable();
    }//GEN-LAST:event_rejectPharmacyActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approvePharmacy;
    private javax.swing.JButton assignToMeButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pharmacyTable;
    private javax.swing.JButton rejectPharmacy;
    // End of variables declaration//GEN-END:variables
}
