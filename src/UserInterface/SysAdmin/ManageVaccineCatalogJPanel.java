/*
 * ManageVaccineCatalogJPanel.java
 *
 * Created on September 24, 2008, 2:40 PM
 */
package UserInterface.SysAdmin;

import Business.Cdc;
import Business.Network.Network;
import Business.Vaccine.Vaccine;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Deepak
 */
public class ManageVaccineCatalogJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Cdc system;

    /**
     * Creates new form ManageProductCatalogJPanel
     */
    public ManageVaccineCatalogJPanel(JPanel upc, Cdc system) {
        initComponents();
        userProcessContainer = upc;
        this.system = system;
        refreshTable();
    }

    private void refreshTable() {
        int rowCount = vaccineCatalog.getRowCount();
        DefaultTableModel model = (DefaultTableModel) vaccineCatalog.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (Vaccine v : system.getVaccineCatalog().getVaccineCatalog()) {
            Object row[] = new Object[3];
            row[0] = v;
            row[1] = v.getID();
            row[2] = v.getDiseaseName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineCatalog = new javax.swing.JTable();
        viewPButton = new javax.swing.JButton();
        createPButton = new javax.swing.JButton();
        searchPButton = new javax.swing.JButton();
        backButton4 = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        delButton5 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Manage Vaccine Catalog");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, -1, -1));

        vaccineCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Vaccine Id", "Disease Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vaccineCatalog);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 590, 89));

        viewPButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewPButton.setText("View Vaccine Details ");
        viewPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPButtonActionPerformed(evt);
            }
        });
        add(viewPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 320, 220, -1));

        createPButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createPButton.setText("Create New Vaccine");
        createPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPButtonActionPerformed(evt);
            }
        });
        add(createPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 350, 220, -1));

        searchPButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchPButton.setText("Search ");
        searchPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPButtonActionPerformed(evt);
            }
        });
        add(searchPButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 160, 130, -1));

        backButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backButton4.setText("<< Back");
        backButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton4ActionPerformed(evt);
            }
        });
        add(backButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 110, -1));

        refreshButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        refreshButton.setMargin(new java.awt.Insets(2, 1, 2, 1));
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 80, -1));

        delButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        delButton5.setText("DeleteVaccine(s)");
        delButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delButton5ActionPerformed(evt);
            }
        });
        add(delButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 190, -1));
    }// </editor-fold>//GEN-END:initComponents
    private void viewPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPButtonActionPerformed
        // TODO add your handling code here:
        int row = vaccineCatalog.getSelectedRow();
        int selectedRowCount = vaccineCatalog.getSelectedRowCount();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a vaccine to view the details");
            return;
        }
        if (selectedRowCount > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one vaccine");
        }
        Vaccine v = (Vaccine) vaccineCatalog.getValueAt(row, 0);
        ViewVaccineDetailJPanel vpdjp = new ViewVaccineDetailJPanel(userProcessContainer, v);
        userProcessContainer.add("ViewVaccineDetailJPanel", vpdjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_viewPButtonActionPerformed

    private void createPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPButtonActionPerformed

        JTextField vaccineNameTextField = new JTextField();
        JTextField diseaseNameTextField = new JTextField();
        Object[] addVaccine = {"Vaccine Name:", vaccineNameTextField, "Disease Name:", diseaseNameTextField};
        int option = JOptionPane.showConfirmDialog(null, addVaccine, "Add Vaccine", JOptionPane.OK_CANCEL_OPTION, -1);
        int tempId = 1;
        for (Vaccine vaccine : system.getVaccineCatalog().getVaccineCatalog()) {
            if (tempId == vaccine.getID()) {
                tempId++;
            }
        }
        if (option == JOptionPane.YES_OPTION) {
            Vaccine vaccine = system.getVaccineCatalog().addVaccine();

            if (vaccineNameTextField.getText() == null || diseaseNameTextField.getText() == null) {
                JOptionPane.showMessageDialog(null, "Please provide a valid entry");
                return;

            }
            try {
                String vaccineName = vaccineNameTextField.getText();
                String diseaseName = diseaseNameTextField.getText();
                vaccine.setVaccineName(vaccineName);
                vaccine.setDiseaseName(diseaseName);
                vaccine.setID(tempId);
                for (Network network : system.getNetworkDirectory().getNetworkList()) {
                    network.getInventoryDirectory().addInventory(network, vaccine, 0);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please provide a valid entry");
                return;
            }
            JOptionPane.showMessageDialog(null, "Vaccine added successfully");
            refreshTable();
        }

    }//GEN-LAST:event_createPButtonActionPerformed

    private void searchPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPButtonActionPerformed
        // TODO add your handling code here:

        SearchForVaccineJPanel sfpjp = new SearchForVaccineJPanel(userProcessContainer, system);
        userProcessContainer.add("SearchForVaccineJPanel", sfpjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_searchPButtonActionPerformed

    private void backButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton4ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton4ActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        refreshTable();
}//GEN-LAST:event_refreshButtonActionPerformed

    private void delButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delButton5ActionPerformed
        // TODO add your handling code here:
        int row = vaccineCatalog.getSelectedRow();
        int selectedRowCount = vaccineCatalog.getSelectedRowCount();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a vaccine");
            return;
        }
        if (selectedRowCount > 1) {
            JOptionPane.showMessageDialog(null, "Please select only one vaccine");
        }
        Vaccine v = (Vaccine) vaccineCatalog.getValueAt(row, 0);
        system.getVaccineCatalog().removeVaccine(v);
        refreshTable();
        JOptionPane.showMessageDialog(null, "Vaccine deleted successfully");
    }//GEN-LAST:event_delButton5ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton4;
    private javax.swing.JButton createPButton;
    private javax.swing.JButton delButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchPButton;
    private javax.swing.JTable vaccineCatalog;
    private javax.swing.JButton viewPButton;
    // End of variables declaration//GEN-END:variables
}
